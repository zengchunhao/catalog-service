plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.zh'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.3")
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.retry:spring-retry'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.94.Final:osx-aarch_64'


    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.testcontainers:postgresql:1.18.3'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'


    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    systemProperty 'spring.profiles.active', 'testdata'
}

bootBuildImage {
    imageName = 'catalog-service'
    environment = [
            'BP_JVM_VERSION': '17.*'
    ]
    docker {
        publishRegistry {
            username = 'zengchunhao'
            password = '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'
            url = 'ghrc.io'
        }
    }
}